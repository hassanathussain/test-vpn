name: Terraform Deploy

on:
  push:
    paths:
      - 'terraform/**'
    # Avoid infinite loop by skipping the update branch
    branches-ignore:
      - update-ec2-ip
  workflow_dispatch:

jobs:
  terraform:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-2
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Needed for pushing to branches

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init

    - name: Terraform Format Check
      working-directory: ./terraform
      run: terraform fmt -check -recursive

    - name: Terraform Validate
      working-directory: ./terraform
      run: terraform validate

    - name: Terraform Plan
      working-directory: ./terraform
      run: terraform plan

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      working-directory: ./terraform
      run: terraform apply -auto-approve

    - name: Save EC2 public IP to file
      if: github.ref == 'refs/heads/main'
      working-directory: ./terraform
      run: terraform output -raw ec2_public_ip > ec2_ip.txt

    - name: Commit and push EC2 IP to dedicated branch
      if: github.ref == 'refs/heads/main'
      env:
        GH_PAT: ${{ secrets.GH_PAT }}
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git checkout -B update-ec2-ip
        git add terraform/ec2_ip.txt
        git commit -m "Update EC2 public IP"
        git push --force https://x-access-token:$GH_PAT@github.com/${{ github.repository }} update-ec2-ip